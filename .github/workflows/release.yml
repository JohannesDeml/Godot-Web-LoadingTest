name: Build Godot project & release

on:
  push:
    tags:
      - '*'
    branches:
      - main

jobs:
  variables:
    name: Define variables üîó
    runs-on: ubuntu-latest
    outputs:
      GODOT_VERSION: "4.3.0"  # Update this to match your Godot version
      TAG: ${{ steps.set_tag.outputs.VERSION }}
      BUILD_NAME: ${{ steps.set_build_name.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Set tag
        id: set_tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${{ env.GODOT_VERSION }}-webgl-master" >> $GITHUB_OUTPUT
          fi

      - name: Set target name
        id: set_build_name
        run: echo "VERSION=WebGL-${{ steps.set_tag.outputs.VERSION }}" >> $GITHUB_OUTPUT

      - name: Log variables
        run: |
          echo "GODOT_VERSION -> ${{ env.GODOT_VERSION }}"
          echo "TAG -> ${{ steps.set_tag.outputs.VERSION }}"
          echo "BUILD_NAME -> ${{ steps.set_build_name.outputs.VERSION }}"

  buildProject:
    name: Create Godot WebGL Build üèó
    needs: [ variables ]
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Build project
        run: |
          mkdir -p build/web
          godot --headless --export-release "Web" build/web/index.html

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.variables.outputs.BUILD_NAME }}
          path: build/web

  createRelease:
    name: Create Github release üêô
    if: ${{ github.ref_type == 'tag' }}
    needs: [ variables ]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          body: |
            ## Changes
            *

            [WebGL Demo](https://your-demo-url-here/${{ needs.variables.outputs.TAG }}/)
          draft: true

  deployOnServer:
    name: Deploy on server üöÄ
    needs: [ variables, buildProject ]
    if: ${{ github.repository_owner == 'JohannesDeml' }}  # Replace with your username
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: ${{ needs.variables.outputs.BUILD_NAME }}
          path: build

      - name: Display structure of root files
        run: ls -R
        working-directory: build

      - name: Deploy ‚§¥
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: 21
          protocol: ftps
          local-dir: ./build/
          server-dir: ./${{ needs.variables.outputs.TAG }}/
          dangerous-clean-slate: true